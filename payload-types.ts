/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  collections: {
    pages: Page;
    media: Media;
    users: User;
    products: Product;
    categories: Category;
    offers: Offer;
    wishlist: Wishlist;
    cart: Cart;
    orders: Order;
    forms: Form;
    'form-submissions': FormSubmission;
    search: Search;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {
    categories: {
      products: 'products';
    };
  };
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    offers: OffersSelect<false> | OffersSelect<true>;
    wishlist: WishlistSelect<false> | WishlistSelect<true>;
    cart: CartSelect<false> | CartSelect<true>;
    orders: OrdersSelect<false> | OrdersSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    'site-settings': SiteSetting;
  };
  globalsSelect: {
    'site-settings': SiteSettingsSelect<false> | SiteSettingsSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  layout?:
    | (
        | HomeType
        | DetailsType
        | ListType
        | NewsletterType
        | FormType
        | FeaturedProductsType
        | CategoriesType
        | DisqusCommentsType
      )[]
    | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
  };
  isHome?: boolean | null;
  isDynamic?: boolean | null;
  slugMode?: ('generate' | 'custom') | null;
  /**
   * Contains only lowercase letters, numbers, and dashes.
   */
  slug?: string | null;
  pathMode?: ('generate' | 'custom') | null;
  path?: string | null;
  parent?: (number | null) | Page;
  breadcrumbs?:
    | {
        doc?: (number | null) | Page;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HomeType".
 */
export interface HomeType {
  title: string;
  description: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'Home';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "DetailsType".
 */
export interface DetailsType {
  collectionSlug?: 'products' | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'Details';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ListType".
 */
export interface ListType {
  /**
   * This will be used as title for the list
   */
  title?: string | null;
  collectionSlug?: ('products' | 'categories' | 'orders') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'List';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "NewsletterType".
 */
export interface NewsletterType {
  heading: string;
  description: string;
  form?: (number | null) | Form;
  id?: string | null;
  blockName?: string | null;
  blockType: 'Newsletter';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: number;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?:
              | {
                  [k: string]: unknown;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  redirect?: {
    url: string;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?:
          | {
              [k: string]: unknown;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormType".
 */
export interface FormType {
  title: string;
  form: {
    relationTo: 'forms';
    value: number | Form;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'FormBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeaturedProductsType".
 */
export interface FeaturedProductsType {
  featuredProducts?:
    | {
        products?: (number | Product)[] | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'FeaturedProducts';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: number;
  /**
   * The name of the product that will be displayed.
   */
  name: string;
  /**
   * SEO-friendly URL for this category.
   */
  slug: string;
  /**
   * Provide a rich text description for the product.
   */
  description?: string | null;
  /**
   * The manufacturer or brand of the product.
   */
  brand: string;
  /**
   * Total available stock for the product.
   */
  stock: number;
  /**
   * The price of the product before any discounts.
   */
  price: number;
  /**
   * Provide details about any discounts available.
   */
  discount?: {
    /**
     * Discount percentage to be applied.
     */
    percentage?: number | null;
    /**
     * The date when the discount becomes active.
     */
    startDate?: string | null;
    /**
     * The date when the discount ends.
     */
    endDate?: string | null;
  };
  /**
   * The final price of the product after applying discounts.
   */
  finalPrice?: number | null;
  /**
   * The category this product belongs to.
   */
  category: number | Category;
  /**
   * Add tags to help categorize the product.
   */
  tags?:
    | {
        /**
         * A single tag for the product.
         */
        tag?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Add key-value pairs to describe product attributes such as Color, Size, Material.
   */
  attributes?:
    | {
        /**
         * The name of the attribute (e.g., Color, Size). For example, use "Size" to define size options.
         */
        key: string;
        value: {
          /**
           * Choose the value type for this attribute. Use "Select" for predefined options like sizes.
           */
          type: 'text' | 'select';
          /**
           * The value of the attribute if it is a simple text.
           */
          textValue?: string | null;
          /**
           * Define the selectable options for this attribute (e.g., S, M, L, XL, XXL for Size).
           */
          selectOptions?:
            | {
                /**
                 * One of the selectable options for this attribute.
                 */
                option: string;
                /**
                 * Additional price for this option, if applicable.
                 */
                extraPrice?: number | null;
                /**
                 * Available stock for this specific option.
                 */
                stock?: number | null;
                id?: string | null;
              }[]
            | null;
        };
        id?: string | null;
      }[]
    | null;
  /**
   * Upload product images.
   */
  images: (number | Media)[];
  /**
   * Mark this product as a best seller to highlight it prominently.
   */
  isFeatured?: boolean | null;
  /**
   * Mark this product as a new arrival to indicate its recent addition.
   */
  isNewArrival?: boolean | null;
  /**
   * Mark this product as part of a special offer or promotion.
   */
  isSpecialOffer?: boolean | null;
  /**
   * Indicate whether the product is eligible for shipping.
   */
  isShippable?: boolean | null;
  /**
   * Add flexible sections for additional information such as Product Details, Size & Fit, Material & Care, etc.
   */
  additionalInformationSections?:
    | {
        /**
         * The title of the section (e.g., Product Details, Size & Fit). This will be displayed as the header for each additional information section.
         */
        sectionTitle: string;
        /**
         * Add attribute-value pairs to describe each section (e.g., Product Dimensions, Material, etc.). This content will provide further details under each section.
         */
        sectionContent?:
          | {
              /**
               * The name of the attribute in this section (e.g., Material, Height). This could describe key characteristics of the product.
               */
              attributeName: string;
              /**
               * The value corresponding to the attribute in this section (e.g., Cotton, 12 inches). This will provide specific details for the attribute.
               */
              attributeValue: string;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  /**
   * The unique identifier associated with this cart in Snipcart.
   */
  snipcartId?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  /**
   * The name of the category. This will be displayed across the application.
   */
  name: string;
  /**
   * SEO-friendly URL for this category.
   */
  slug: string;
  /**
   * Provide a rich text description to explain this category.
   */
  description?: string | null;
  /**
   * Select the parent category if this category belongs to a hierarchy.
   */
  parentCategory?: (number | null) | Category;
  /**
   * Select subcategories related to this category.
   */
  subCategories?: (number | Category)[] | null;
  /**
   * Mark this category as featured to highlight it on the homepage or special sections.
   */
  isFeatured?: boolean | null;
  /**
   * Upload an image that represents this category.
   */
  image: number | Media;
  /**
   * View the products associated with this category.
   */
  products?: {
    docs?: (number | Product)[] | null;
    hasNextPage?: boolean | null;
  } | null;
  /**
   * The total number of products under this category.
   */
  productCount?: number | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    blogImageSize2?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    blogImageSize3?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CategoriesType".
 */
export interface CategoriesType {
  categories?:
    | {
        category?: (number | null) | Category;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'Categories';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "DisqusCommentsType".
 */
export interface DisqusCommentsType {
  title?: string | null;
  /**
   * To find your Disqus shortname, log into Disqus, access the Admin panel, and check the URL or General Site Settings.
   */
  shortName: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'DisqusComments';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  displayName?: string | null;
  /**
   * Contains only lowercase letters, numbers, and dashes.
   */
  username: string;
  imageUrl?: (number | null) | Media;
  role: ('admin' | 'author' | 'user')[];
  emailVerified?: string | null;
  socialLinks?:
    | {
        platform:
          | 'website'
          | 'facebook'
          | 'instagram'
          | 'twitter'
          | 'linkedin'
          | 'youtube'
          | 'tiktok'
          | 'pinterest'
          | 'snapchat'
          | 'reddit'
          | 'tumblr'
          | 'whatsapp'
          | 'telegram'
          | 'github'
          | 'medium'
          | 'quora'
          | 'discord';
        value: string;
        id?: string | null;
      }[]
    | null;
  /**
   * This bio will be shown in the authors details page
   */
  bio?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  _verified?: boolean | null;
  _verificationToken?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "offers".
 */
export interface Offer {
  id: number;
  name: string;
  /**
   * SEO-friendly URL for this category.
   */
  slug: string;
  description?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  discountPercentage: number;
  startDate: string;
  endDate: string;
  associatedProducts?: (number | Product)[] | null;
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "wishlist".
 */
export interface Wishlist {
  id: number;
  user: number | User;
  items: {
    product: number | Product;
    addedAt?: string | null;
    id?: string | null;
  }[];
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * Manage the shopping carts of users, including their selected items and total price.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cart".
 */
export interface Cart {
  id: number;
  /**
   * The user associated with this cart.
   */
  user: number | User;
  /**
   * List of items added to the cart.
   */
  items?:
    | {
        /**
         * The unique identifier associated with this item in Snipcart.
         */
        snipcartId: string;
        /**
         * The product added to the cart.
         */
        product: number | Product;
        /**
         * Number of units of the product.
         */
        quantity: number;
        /**
         * Price per unit of the product.
         */
        price: number;
        /**
         * Total cost for this item (calculated automatically).
         */
        total?: number | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Total cost of all items in the cart (calculated automatically).
   */
  totalPrice?: number | null;
  /**
   * The unique identifier associated with this cart in Snipcart.
   */
  snipcartId: string;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders".
 */
export interface Order {
  id: number;
  /**
   * Select the customer placing the order.
   */
  user: number | User;
  /**
   * List of items included in this order. At least one item is required.
   */
  items: {
    uniqueId: string;
    product: number | Product;
    id: string | null;
    name: string;
    price: number;
    description?: string | null;
    /**
     * Indicates if taxes are included in the price.
     */
    hasTaxesIncluded?: boolean | null;
    categories?:
      | {
          category?: string | null;
          id?: string | null;
        }[]
      | null;
    url?: string | null;
    image?: string | null;
    quantity: number;
    shippable?: boolean | null;
    taxable?: boolean | null;
    taxes?:
      | {
          name?: string | null;
          rate?: number | null;
          amount?: number | null;
          id?: string | null;
        }[]
      | null;
    attributes?:
      | {
          name?: string | null;
          value?: string | null;
          id?: string | null;
        }[]
      | null;
    dimensions?: {
      width?: number | null;
      height?: number | null;
      length?: number | null;
      weight?: number | null;
    };
    unitPrice: number;
    /**
     * Automatically calculated as quantity × unit price.
     */
    totalPrice: number;
    totalPriceWithoutTaxes?: number | null;
    totalPriceWithoutDiscountsAndTaxes?: number | null;
    totalPriceWithoutDiscountsAndTaxesLegacy?: number | null;
    addedOn?: string | null;
    modificationDate?: string | null;
    paymentGatewayId?: string | null;
  }[];
  /**
   * Total number of items in the order.
   */
  totalCount?: number | null;
  /**
   * The total price of all items in the order.
   */
  totalPrice?: number | null;
  shipToBillingAddress?: boolean | null;
  billingAddress: {
    fullName: string;
    firstName?: string | null;
    name: string;
    company?: string | null;
    address1: string;
    address2?: string | null;
    fullAddress?: string | null;
    city: string;
    country: string;
    postalCode: string;
    province?: string | null;
    phone?: string | null;
    vatNumber?: string | null;
  };
  shippingAddress: {
    fullName: string;
    firstName?: string | null;
    name: string;
    company?: string | null;
    address1: string;
    address2?: string | null;
    fullAddress?: string | null;
    city: string;
    country: string;
    postalCode: string;
    province?: string | null;
    phone?: string | null;
    vatNumber?: string | null;
  };
  shippingDetails: {
    cost: number;
    method: string;
    status: number;
  };
  shippingRates?: {
    loading?: boolean | null;
    status?: string | null;
    items?:
      | {
          item?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  discounts?:
    | {
        item?: string | null;
        id?: string | null;
      }[]
    | null;
  status: number;
  token: string;
  email: string;
  taxes?: {
    loading?: boolean | null;
    status?: string | null;
    items?:
      | {
          item?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  discountInducedTaxesVariation?: number | null;
  currency: string;
  subtotal: number;
  total: number;
  invoiceNumber: string;
  card: {
    last4: string;
    brand: string;
  };
  paymentDetails: {
    method: string;
    status: 'unset' | 'saving' | 'saved' | 'processing' | 'waitingForUser' | 'paid' | 'refunded' | 'pending';
    details?:
      | {
          [k: string]: unknown;
        }
      | unknown[]
      | string
      | number
      | boolean
      | null;
    iconUrl?: string | null;
    instructions?: string | null;
    display?: string | null;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: number;
  form: number | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This is a collection of automatically created search results. These results are used by the global site search and will be updated automatically as documents in the CMS are created or updated.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: number;
  title?: string | null;
  priority?: number | null;
  doc: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'products';
        value: number | Product;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'offers';
        value: number | Offer;
      } | null)
    | ({
        relationTo: 'wishlist';
        value: number | Wishlist;
      } | null)
    | ({
        relationTo: 'cart';
        value: number | Cart;
      } | null)
    | ({
        relationTo: 'orders';
        value: number | Order;
      } | null)
    | ({
        relationTo: 'forms';
        value: number | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: number | FormSubmission;
      } | null)
    | ({
        relationTo: 'search';
        value: number | Search;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  layout?:
    | T
    | {
        Home?: T | HomeTypeSelect<T>;
        Details?: T | DetailsTypeSelect<T>;
        List?: T | ListTypeSelect<T>;
        Newsletter?: T | NewsletterTypeSelect<T>;
        FormBlock?: T | FormTypeSelect<T>;
        FeaturedProducts?: T | FeaturedProductsTypeSelect<T>;
        Categories?: T | CategoriesTypeSelect<T>;
        DisqusComments?: T | DisqusCommentsTypeSelect<T>;
      };
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  isHome?: T;
  isDynamic?: T;
  slugMode?: T;
  slug?: T;
  pathMode?: T;
  path?: T;
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HomeType_select".
 */
export interface HomeTypeSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "DetailsType_select".
 */
export interface DetailsTypeSelect<T extends boolean = true> {
  collectionSlug?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ListType_select".
 */
export interface ListTypeSelect<T extends boolean = true> {
  title?: T;
  collectionSlug?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "NewsletterType_select".
 */
export interface NewsletterTypeSelect<T extends boolean = true> {
  heading?: T;
  description?: T;
  form?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormType_select".
 */
export interface FormTypeSelect<T extends boolean = true> {
  title?: T;
  form?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeaturedProductsType_select".
 */
export interface FeaturedProductsTypeSelect<T extends boolean = true> {
  featuredProducts?:
    | T
    | {
        products?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CategoriesType_select".
 */
export interface CategoriesTypeSelect<T extends boolean = true> {
  categories?:
    | T
    | {
        category?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "DisqusCommentsType_select".
 */
export interface DisqusCommentsTypeSelect<T extends boolean = true> {
  title?: T;
  shortName?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        blogImageSize2?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        blogImageSize3?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  displayName?: T;
  username?: T;
  imageUrl?: T;
  role?: T;
  emailVerified?: T;
  socialLinks?:
    | T
    | {
        platform?: T;
        value?: T;
        id?: T;
      };
  bio?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  _verified?: T;
  _verificationToken?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  description?: T;
  brand?: T;
  stock?: T;
  price?: T;
  discount?:
    | T
    | {
        percentage?: T;
        startDate?: T;
        endDate?: T;
      };
  finalPrice?: T;
  category?: T;
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  attributes?:
    | T
    | {
        key?: T;
        value?:
          | T
          | {
              type?: T;
              textValue?: T;
              selectOptions?:
                | T
                | {
                    option?: T;
                    extraPrice?: T;
                    stock?: T;
                    id?: T;
                  };
            };
        id?: T;
      };
  images?: T;
  isFeatured?: T;
  isNewArrival?: T;
  isSpecialOffer?: T;
  isShippable?: T;
  additionalInformationSections?:
    | T
    | {
        sectionTitle?: T;
        sectionContent?:
          | T
          | {
              attributeName?: T;
              attributeValue?: T;
              id?: T;
            };
        id?: T;
      };
  snipcartId?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  description?: T;
  parentCategory?: T;
  subCategories?: T;
  isFeatured?: T;
  image?: T;
  products?: T;
  productCount?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "offers_select".
 */
export interface OffersSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  description?: T;
  discountPercentage?: T;
  startDate?: T;
  endDate?: T;
  associatedProducts?: T;
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "wishlist_select".
 */
export interface WishlistSelect<T extends boolean = true> {
  user?: T;
  items?:
    | T
    | {
        product?: T;
        addedAt?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cart_select".
 */
export interface CartSelect<T extends boolean = true> {
  user?: T;
  items?:
    | T
    | {
        snipcartId?: T;
        product?: T;
        quantity?: T;
        price?: T;
        total?: T;
        id?: T;
      };
  totalPrice?: T;
  snipcartId?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders_select".
 */
export interface OrdersSelect<T extends boolean = true> {
  user?: T;
  items?:
    | T
    | {
        uniqueId?: T;
        product?: T;
        id?: T;
        name?: T;
        price?: T;
        description?: T;
        hasTaxesIncluded?: T;
        categories?:
          | T
          | {
              category?: T;
              id?: T;
            };
        url?: T;
        image?: T;
        quantity?: T;
        shippable?: T;
        taxable?: T;
        taxes?:
          | T
          | {
              name?: T;
              rate?: T;
              amount?: T;
              id?: T;
            };
        attributes?:
          | T
          | {
              name?: T;
              value?: T;
              id?: T;
            };
        dimensions?:
          | T
          | {
              width?: T;
              height?: T;
              length?: T;
              weight?: T;
            };
        unitPrice?: T;
        totalPrice?: T;
        totalPriceWithoutTaxes?: T;
        totalPriceWithoutDiscountsAndTaxes?: T;
        totalPriceWithoutDiscountsAndTaxesLegacy?: T;
        addedOn?: T;
        modificationDate?: T;
        paymentGatewayId?: T;
      };
  totalCount?: T;
  totalPrice?: T;
  shipToBillingAddress?: T;
  billingAddress?:
    | T
    | {
        fullName?: T;
        firstName?: T;
        name?: T;
        company?: T;
        address1?: T;
        address2?: T;
        fullAddress?: T;
        city?: T;
        country?: T;
        postalCode?: T;
        province?: T;
        phone?: T;
        vatNumber?: T;
      };
  shippingAddress?:
    | T
    | {
        fullName?: T;
        firstName?: T;
        name?: T;
        company?: T;
        address1?: T;
        address2?: T;
        fullAddress?: T;
        city?: T;
        country?: T;
        postalCode?: T;
        province?: T;
        phone?: T;
        vatNumber?: T;
      };
  shippingDetails?:
    | T
    | {
        cost?: T;
        method?: T;
        status?: T;
      };
  shippingRates?:
    | T
    | {
        loading?: T;
        status?: T;
        items?:
          | T
          | {
              item?: T;
              id?: T;
            };
      };
  discounts?:
    | T
    | {
        item?: T;
        id?: T;
      };
  status?: T;
  token?: T;
  email?: T;
  taxes?:
    | T
    | {
        loading?: T;
        status?: T;
        items?:
          | T
          | {
              item?: T;
              id?: T;
            };
      };
  discountInducedTaxesVariation?: T;
  currency?: T;
  subtotal?: T;
  total?: T;
  invoiceNumber?: T;
  card?:
    | T
    | {
        last4?: T;
        brand?: T;
      };
  paymentDetails?:
    | T
    | {
        method?: T;
        status?: T;
        details?: T;
        iconUrl?: T;
        instructions?: T;
        display?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-settings".
 */
export interface SiteSetting {
  id: number;
  general: {
    title: string;
    description: string;
    /**
     * We recommend a maximum size of 256 * 256 pixels
     */
    faviconUrl: number | Media;
    /**
     * We recommend a maximum size of 1200 * 630 pixels
     */
    ogImageUrl: number | Media;
    keywords?: string[] | null;
    /**
     * This field is used to format currency values & used as default currency for ecommerce-theme
     */
    currency:
      | 'usd'
      | 'eur'
      | 'inr'
      | 'gbp'
      | 'jpy'
      | 'cad'
      | 'aud'
      | 'chf'
      | 'cny'
      | 'hkd'
      | 'sgd'
      | 'mxn'
      | 'brl'
      | 'rub'
      | 'krw'
      | 'zar'
      | 'try'
      | 'sar'
      | 'aed'
      | 'pln';
  };
  navbar: {
    logo: BrandLogo;
    menuLinks?:
      | {
          /**
           * Check to create group of links
           */
          group?: boolean | null;
          menuLink?: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            /**
             * Upload an svg or logo to be displayed with link
             */
            icon?: (number | null) | Media;
            label: string;
            page?: {
              relationTo: 'pages';
              value: number | Page;
            } | null;
            url?: string | null;
            id?: string | null;
          };
          menuLinkGroup?: {
            groupTitle: string;
            groupLinks?:
              | {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  /**
                   * Upload an svg or logo to be displayed with link
                   */
                  icon?: (number | null) | Media;
                  label: string;
                  page?: {
                    relationTo: 'pages';
                    value: number | Page;
                  } | null;
                  url?: string | null;
                  id?: string | null;
                }[]
              | null;
          };
          id?: string | null;
        }[]
      | null;
  };
  footer: {
    logo: BrandLogo;
    footerLinks?:
      | {
          /**
           * Check to create group of links
           */
          group?: boolean | null;
          menuLink?: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            /**
             * Upload an svg or logo to be displayed with link
             */
            icon?: (number | null) | Media;
            label: string;
            page?: {
              relationTo: 'pages';
              value: number | Page;
            } | null;
            url?: string | null;
            id?: string | null;
          };
          menuLinkGroup?: {
            groupTitle: string;
            groupLinks?:
              | {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  /**
                   * Upload an svg or logo to be displayed with link
                   */
                  icon?: (number | null) | Media;
                  label: string;
                  page?: {
                    relationTo: 'pages';
                    value: number | Page;
                  } | null;
                  url?: string | null;
                  id?: string | null;
                }[]
              | null;
          };
          id?: string | null;
        }[]
      | null;
    socialLinks?:
      | {
          platform:
            | 'website'
            | 'facebook'
            | 'instagram'
            | 'twitter'
            | 'linkedin'
            | 'youtube'
            | 'tiktok'
            | 'pinterest'
            | 'snapchat'
            | 'reddit'
            | 'tumblr'
            | 'whatsapp'
            | 'telegram'
            | 'github'
            | 'medium'
            | 'quora'
            | 'discord';
          value: string;
          id?: string | null;
        }[]
      | null;
    copyright?: string | null;
  };
  redirectionLinks?: {
    /**
     * This redirects to a blog details page
     */
    blogLink?: {
      relationTo: 'pages';
      value: number | Page;
    } | null;
    /**
     * This redirect to a product details page
     */
    productLink?: {
      relationTo: 'pages';
      value: number | Page;
    } | null;
    /**
     * This redirects to a author details page
     */
    authorLink?: {
      relationTo: 'pages';
      value: number | Page;
    } | null;
    /**
     * This redirects to a tag details page
     */
    tagLink?: {
      relationTo: 'pages';
      value: number | Page;
    } | null;
  };
  monetization?: {
    /**
     * Add the publisher-id from Google AdSense Console
     */
    adSenseId?: string | null;
    /**
     * Add the measurement id from Google Analytics dashboard
     */
    measurementId?: string | null;
  };
  themeSettings: {
    lightMode: {
      primary: string;
      background: string;
      text: string;
      foreground: string;
      popover: string;
      border: string;
    };
    darkMode: {
      primary: string;
      background: string;
      text: string;
      foreground: string;
      popover: string;
      border: string;
    };
    fonts: {
      display: {
        type: 'customFont' | 'googleFont';
        customFont?: (number | null) | Media;
        remoteFont?: string | null;
        fontName?: string | null;
      };
      body: {
        type: 'customFont' | 'googleFont';
        customFont?: (number | null) | Media;
        remoteFont?: string | null;
        fontName?: string | null;
      };
    };
    radius: 'none' | 'small' | 'medium' | 'large' | 'full';
  };
  productInformation?: {
    currency?: ('USD' | 'INR') | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BrandLogo".
 */
export interface BrandLogo {
  imageUrl: number | Media;
  /**
   * Adjust to the height of the logo
   */
  height?: number | null;
  /**
   * Adjust to the width of the logo
   */
  width?: number | null;
  /**
   * This text appears below the footer image
   */
  description?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-settings_select".
 */
export interface SiteSettingsSelect<T extends boolean = true> {
  general?:
    | T
    | {
        title?: T;
        description?: T;
        faviconUrl?: T;
        ogImageUrl?: T;
        keywords?: T;
        currency?: T;
      };
  navbar?:
    | T
    | {
        logo?: T | BrandLogoSelect<T>;
        menuLinks?:
          | T
          | {
              group?: T;
              menuLink?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    icon?: T;
                    label?: T;
                    page?: T;
                    url?: T;
                    id?: T;
                  };
              menuLinkGroup?:
                | T
                | {
                    groupTitle?: T;
                    groupLinks?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          icon?: T;
                          label?: T;
                          page?: T;
                          url?: T;
                          id?: T;
                        };
                  };
              id?: T;
            };
      };
  footer?:
    | T
    | {
        logo?: T | BrandLogoSelect<T>;
        footerLinks?:
          | T
          | {
              group?: T;
              menuLink?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    icon?: T;
                    label?: T;
                    page?: T;
                    url?: T;
                    id?: T;
                  };
              menuLinkGroup?:
                | T
                | {
                    groupTitle?: T;
                    groupLinks?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          icon?: T;
                          label?: T;
                          page?: T;
                          url?: T;
                          id?: T;
                        };
                  };
              id?: T;
            };
        socialLinks?:
          | T
          | {
              platform?: T;
              value?: T;
              id?: T;
            };
        copyright?: T;
      };
  redirectionLinks?:
    | T
    | {
        blogLink?: T;
        productLink?: T;
        authorLink?: T;
        tagLink?: T;
      };
  monetization?:
    | T
    | {
        adSenseId?: T;
        measurementId?: T;
      };
  themeSettings?:
    | T
    | {
        lightMode?:
          | T
          | {
              primary?: T;
              background?: T;
              text?: T;
              foreground?: T;
              popover?: T;
              border?: T;
            };
        darkMode?:
          | T
          | {
              primary?: T;
              background?: T;
              text?: T;
              foreground?: T;
              popover?: T;
              border?: T;
            };
        fonts?:
          | T
          | {
              display?:
                | T
                | {
                    type?: T;
                    customFont?: T;
                    remoteFont?: T;
                    fontName?: T;
                  };
              body?:
                | T
                | {
                    type?: T;
                    customFont?: T;
                    remoteFont?: T;
                    fontName?: T;
                  };
            };
        radius?: T;
      };
  productInformation?:
    | T
    | {
        currency?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BrandLogo_select".
 */
export interface BrandLogoSelect<T extends boolean = true> {
  imageUrl?: T;
  height?: T;
  width?: T;
  description?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}